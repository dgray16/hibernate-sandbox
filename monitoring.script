SET DATABASE UNIQUE NAME HSQLDB5AE7C167F3
SET DATABASE GC 0
SET DATABASE DEFAULT RESULT MEMORY ROWS 0
SET DATABASE EVENT LOG LEVEL 0
SET DATABASE TRANSACTION CONTROL LOCKS
SET DATABASE DEFAULT ISOLATION LEVEL READ COMMITTED
SET DATABASE TRANSACTION ROLLBACK ON CONFLICT TRUE
SET DATABASE TEXT TABLE DEFAULTS ''
SET DATABASE SQL NAMES FALSE
SET DATABASE SQL REFERENCES FALSE
SET DATABASE SQL SIZE TRUE
SET DATABASE SQL TYPES FALSE
SET DATABASE SQL TDC DELETE TRUE
SET DATABASE SQL TDC UPDATE TRUE
SET DATABASE SQL CONCAT NULLS TRUE
SET DATABASE SQL UNIQUE NULLS TRUE
SET DATABASE SQL CONVERT TRUNCATE TRUE
SET DATABASE SQL AVG SCALE 0
SET DATABASE SQL DOUBLE NAN TRUE
SET FILES WRITE DELAY 500 MILLIS
SET FILES BACKUP INCREMENT TRUE
SET FILES CACHE SIZE 10000
SET FILES CACHE ROWS 50000
SET FILES SCALE 32
SET FILES LOB SCALE 32
SET FILES DEFRAG 0
SET FILES NIO TRUE
SET FILES NIO SIZE 256
SET FILES LOG TRUE
SET FILES LOG SIZE 50
CREATE ROLE FULLACCESS
CREATE ROLE LIMITACCESS
CREATE USER "root" PASSWORD DIGEST '63a9f0ea7bb98050796b649e85481845'
ALTER USER "root" SET LOCAL TRUE
CREATE USER "SUPERUSER" PASSWORD DIGEST '0baea2f0ae20150db78f58cddac442a9'
ALTER USER "SUPERUSER" SET LOCAL TRUE
CREATE USER "ADMINISTRATOR" PASSWORD DIGEST '200ceb26807d6bf99fd6f4f0d1ca54d4'
CREATE SCHEMA PUBLIC AUTHORIZATION DBA
SET SCHEMA PUBLIC
CREATE SEQUENCE PUBLIC.HIBERNATE_SEQUENCE AS INTEGER START WITH 1
CREATE MEMORY TABLE PUBLIC.SERVICES(ID INTEGER NOT NULL PRIMARY KEY,HOST VARCHAR(255),PORT INTEGER,CONSTRAINT UK_4AJIPCEYNLT0JW4W7AA115597 UNIQUE(HOST),CONSTRAINT UK_J160GG7288YWJJN1L3K9X0IUC UNIQUE(PORT),CONSTRAINT UK1Y3FYFDRMYHQ5HL5V53X6NNX6 UNIQUE(HOST,PORT))
CREATE MEMORY TABLE PUBLIC.AVAILABILITY(ID INTEGER GENERATED BY DEFAULT AS IDENTITY(START WITH 0) NOT NULL PRIMARY KEY,SERVICE_ID INTEGER NOT NULL,IS_AVAILABLE BOOLEAN NOT NULL,CONSTRAINT FKLT0C8N50KRC0R2K9TS406IQAA FOREIGN KEY(SERVICE_ID) REFERENCES PUBLIC.SERVICES(ID))
ALTER TABLE PUBLIC.AVAILABILITY ALTER COLUMN ID RESTART WITH 5
CREATE UNIQUE INDEX "AVAILABILITY_service_id_uindex" ON PUBLIC.AVAILABILITY(SERVICE_ID)
CREATE MEMORY TABLE PUBLIC.BACKUP(ID INTEGER GENERATED BY DEFAULT AS IDENTITY(START WITH 0) NOT NULL PRIMARY KEY,HOST VARCHAR(255),HOSTNAME VARCHAR(255))
ALTER TABLE PUBLIC.BACKUP ALTER COLUMN ID RESTART WITH 3
CREATE PROCEDURE PUBLIC.BACKUPVALUE(IN SOMENAME VARCHAR(255)) SPECIFIC BACKUP_10112 LANGUAGE SQL NOT DETERMINISTIC MODIFIES SQL DATA NEW SAVEPOINT LEVEL BEGIN ATOMIC INSERT INTO PUBLIC.BACKUP(ID,HOST)VALUES(DEFAULT,SOMENAME);END
SET SCHEMA PUBLIC
CREATE TRIGGER PUBLIC.TRIG AFTER UPDATE ON PUBLIC.SERVICES REFERENCING NEW ROW AS NEWROW FOR EACH ROW WHEN (newrow.id > 1) INSERT INTO PUBLIC.BACKUP(ID,HOST)VALUES(DEFAULT,CONCAT(NEWROW.ID,' Trigger'))
ALTER SEQUENCE SYSTEM_LOBS.LOB_ID RESTART WITH 1
ALTER SEQUENCE PUBLIC.HIBERNATE_SEQUENCE RESTART WITH 1
SET DATABASE DEFAULT INITIAL SCHEMA PUBLIC
GRANT USAGE ON DOMAIN INFORMATION_SCHEMA.SQL_IDENTIFIER TO PUBLIC
GRANT USAGE ON DOMAIN INFORMATION_SCHEMA.YES_OR_NO TO PUBLIC
GRANT USAGE ON DOMAIN INFORMATION_SCHEMA.TIME_STAMP TO PUBLIC
GRANT USAGE ON DOMAIN INFORMATION_SCHEMA.CARDINAL_NUMBER TO PUBLIC
GRANT USAGE ON DOMAIN INFORMATION_SCHEMA.CHARACTER_DATA TO PUBLIC
GRANT SELECT,INSERT,UPDATE ON TABLE PUBLIC.SERVICES TO FULLACCESS
GRANT SELECT,INSERT,UPDATE ON TABLE PUBLIC.AVAILABILITY TO FULLACCESS
GRANT SELECT ON TABLE PUBLIC.AVAILABILITY TO LIMITACCESS
GRANT DBA TO "root"
GRANT FULLACCESS TO "SUPERUSER"
GRANT LIMITACCESS TO "ADMINISTRATOR"
SET SCHEMA SYSTEM_LOBS
INSERT INTO BLOCKS VALUES(0,2147483647,0)
SET SCHEMA PUBLIC
INSERT INTO SERVICES VALUES(1,'localhost',8080)
INSERT INTO SERVICES VALUES(2,'127.0.0.1',8081)
INSERT INTO SERVICES VALUES(3,'stackoverflow.com',80)
INSERT INTO SERVICES VALUES(4,'vk.com',65535)
INSERT INTO SERVICES VALUES(5,'google.com',128)
INSERT INTO AVAILABILITY VALUES(0,5,TRUE)
INSERT INTO AVAILABILITY VALUES(1,4,FALSE)
INSERT INTO AVAILABILITY VALUES(2,3,TRUE)
INSERT INTO AVAILABILITY VALUES(3,2,FALSE)
INSERT INTO AVAILABILITY VALUES(4,1,TRUE)
INSERT INTO BACKUP VALUES(0,'This is stored procedure',NULL)
INSERT INTO BACKUP VALUES(1,'This is stored procedure',NULL)
INSERT INTO BACKUP VALUES(2,'This is stored procedure',NULL)
